;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;#define DK1     PORTC.4
;#define DK2     PORTC.5
;#define DK3     PORTC.6
;#define DK4     PORTC.7
;
;unsigned char number[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90};

	.DSEG
;unsigned int x, count;
;unsigned char i;
;
;void show(unsigned int x) {
; 0000 000D void show(unsigned int x) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000E     unsigned int temp;
; 0000 000F     unsigned char arr[4], i;
; 0000 0010     temp = x;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;	x -> Y+8
;	temp -> R16,R17
;	arr -> Y+4
;	i -> R19
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0011     for (i = 0; i < 4; i++) // tach so tu duoi lên tren
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0012     {
; 0000 0013         arr[3 - i] = temp % 10;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0014         temp = temp / 10;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0015     }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0016    // hien thi
; 0000 0017    DK1 = 0;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0018    PORTB = number[arr[0]];
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0019    delay_ms(5);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 001A    DK1 = 1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 001B 
; 0000 001C    DK2 = 0;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 001D    PORTB = number[arr[1]];
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 001E    delay_ms(5);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 001F    DK2 = 1;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0020 
; 0000 0021    DK3 = 0;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0022    PORTB = number[arr[2]];
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0023    delay_ms(5);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0024    DK3 = 1;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0025 
; 0000 0026    DK4 = 0;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0027    PORTB = number[arr[3]];
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0028    delay_ms(5);
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0029    DK4 = 1;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 002A 
; 0000 002B }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;
;void main(void)
; 0000 002E {
;PCODE: $00000067 VOL: 0
; 0000 002F DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0030 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0031 
; 0000 0032 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0033 PORTB=(1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0034 
; 0000 0035 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0036 PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0037 
; 0000 0038 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0039 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 003A 
; 0000 003B TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 003C TCNT0=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 003D OCR0=0x00;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 003E 
; 0000 003F TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0040 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0041 TCNT1H=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0042 TCNT1L=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0043 ICR1H=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0044 ICR1L=0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0045 OCR1AH=0x00;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0046 OCR1AL=0x00;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0047 OCR1BH=0x00;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0048 OCR1BL=0x00;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0049 
; 0000 004A ASSR=0<<AS2;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 004B TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 004C TCNT2=0x00;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 004D OCR2=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 004E 
; 0000 004F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0050 
; 0000 0051 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0052 MCUCSR=(0<<ISC2);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0053 
; 0000 0054 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0055 
; 0000 0056 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0057 SFIOR=(0<<ACME);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0058 
; 0000 0059 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 005A 
; 0000 005B SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 005C 
; 0000 005D TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 005E 
; 0000 005F while (1) {
;PCODE: $000000AC VOL: 0
; 0000 0060     // moi ham show delay 20ms => goi ham show 50 lan => 50*20 = 1000ms
; 0000 0061     // cach 1: dung vong For
; 0000 0062     // cach 2
; 0000 0063      /* show(x);
; 0000 0064       i++;
; 0000 0065       if (i > 50)
; 0000 0066       {
; 0000 0067             x++;
; 0000 0068             i = 0;
; 0000 0069       }
; 0000 006A       */
; 0000 006B      // Task 3: Giao tiep voi nut bam nhan giu tang 1 don vi
; 0000 006C      show(x);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 006D      if (PIND.0 == 0)
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 006E      {
; 0000 006F         count++;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0070         if (count > 25)
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0071         {
; 0000 0072             x++;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0073             count = 0;
;PCODE: $000000BB VOL: 0
; 0000 0074         }
; 0000 0075      }
;PCODE: $000000BC VOL: 0
; 0000 0076      if (PIND.1 == 0)
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0077      {
; 0000 0078         count++;
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0079         if (count > 25)
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 007A         {
; 0000 007B             x--;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 007C             count = 0;
;PCODE: $000000CA VOL: 0
; 0000 007D         }
; 0000 007E      }
;PCODE: $000000CB VOL: 0
; 0000 007F     }
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0080 }
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
