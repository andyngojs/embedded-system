;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <alcd.h>
;
;#define FIRST_ADC_INPUT 0
;#define LAST_ADC_INPUT 0
;
;unsigned int temp;
;
;unsigned int adc_data[LAST_ADC_INPUT-FIRST_ADC_INPUT+1];
;// Voltage Reference: AREF pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;
;// ADC interrupt service routine
;// with auto input scanning
;interrupt [ADC_INT] void adc_isr(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0012     static unsigned char input_index=0;
; 0000 0013     // Read the AD conversion result
; 0000 0014     adc_data[input_index]=ADCW;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0015     // Select next ADC input
; 0000 0016     if (++input_index > (LAST_ADC_INPUT-FIRST_ADC_INPUT))
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0017        input_index=0;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0018     ADMUX=(FIRST_ADC_INPUT | ADC_VREF_TYPE)+input_index;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0019     // Delay needed for the stabilization of the ADC input voltage
; 0000 001A     delay_us(10);
;PCODE: $00000020 VOL: 0
; 0000 001B     // Start the AD conversion
; 0000 001C     ADCSRA|=(1<<ADSC);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001D }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;
;void readTemp(unsigned int temp) {
; 0000 001F void readTemp(unsigned int temp) {
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0020      unsigned int x;
; 0000 0021      x = temp;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;	temp -> Y+2
;	x -> R16,R17
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0022      lcd_putchar(x/10+48);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0023      x = x % 10;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0024      lcd_putchar(x+48);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0025 }
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;
;void main(void)
; 0000 0028 {
;PCODE: $00000041 VOL: 0
; 0000 0029     DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 002A     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 002B 
; 0000 002C     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 002D     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 002E 
; 0000 002F     DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0030     PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0031 
; 0000 0032     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0033     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0034 
; 0000 0035     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0036     TCNT0=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0037     OCR0=0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0038 
; 0000 0039     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003A     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 003B     TCNT1H=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003C     TCNT1L=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003D     ICR1H=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003E     ICR1L=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 003F     OCR1AH=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0040     OCR1AL=0x00;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0041     OCR1BH=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0042     OCR1BL=0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0043 
; 0000 0044     ASSR=0<<AS2;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0045     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0046     TCNT2=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0047     OCR2=0x00;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0048 
; 0000 0049     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 004A 
; 0000 004B     MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 004C     MCUCSR=(0<<ISC2);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 004D 
; 0000 004E     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 004F 
; 0000 0050     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0051 
; 0000 0052     ADMUX=FIRST_ADC_INPUT | ADC_VREF_TYPE;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0053     ADCSRA=(1<<ADEN) | (1<<ADSC) | (1<<ADATE) | (0<<ADIF) | (1<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0054     SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0055 
; 0000 0056     // SPI initialization
; 0000 0057     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0058     // TWI initialization
; 0000 0059     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 005A 
; 0000 005B     lcd_init(16);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 005C 
; 0000 005D     #asm("sei")
;PCODE: $0000008A VOL: 0
	sei
;PCODE: $0000008B VOL: 0
; 0000 005E 
; 0000 005F     while (1)
;PCODE: $0000008C VOL: 0
; 0000 0060       {
; 0000 0061         lcd_gotoxy(0,0);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0062         lcd_putsf("Nhiet Do: ");
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0063         temp = ( 500 * (long)adc_data[0]) / 1023;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0064         lcd_gotoxy(10,0);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0065         readTemp(temp);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0066         lcd_gotoxy(12,0);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0067         lcd_putchar(223);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0068         lcd_putsf("C");
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0069 
; 0000 006A         if (temp <= 20) {
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 006B             PORTD.0 = 0;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 006C             PORTD.1 = 1;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 006D         }
; 0000 006E         else {
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 006F             PORTD.0 = 1;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0070             PORTD.1 = 0;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0071         }
;PCODE: $000000B8 VOL: 0
; 0000 0072       }
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0073 }
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
